"use strict";var e,i,n=require("fs"),r=require("rimraf");module.exports=exports,e=process.version.substr(1).replace(/-.*$/,"").split(".").map(function(e){return+e}),i=["build","clean","configure","package","publish","reveal","testbinary","testpackage","unpublish"],module.exports.get_napi_version=function(){var i=process.versions.napi;return i||(9===e[0]&&e[1]>=3?i=2:8===e[0]&&(i=1)),i},module.exports.get_napi_version_as_string=function(){var e=module.exports.get_napi_version();return e?""+e:""},module.exports.validate_package_json=function(e){var i=e.binary,n=i.module_path&&-1!==i.module_path.indexOf("{napi_build_version}"),r=i.remote_path&&-1!==i.remote_path.indexOf("{napi_build_version}"),o=i.package_name&&-1!==i.package_name.indexOf("{napi_build_version}"),s=module.exports.get_napi_build_versions(e);if(s&&s.forEach(function(e){if(!(parseInt(e,10)===e&&e>0))throw Error("All values specified in napi_versions must be positive integers.")}),s&&(!n||!r&&!o))throw Error("When napi_versions is specified; module_path and either remote_path or package_name must contain the substitution string '{napi_build_version}`.");if((n||r||o)&&!s)throw Error("When the substitution string '{napi_build_version}` is specified in module_path, remote_path, or package_name; napi_versions must also be specified.");if(s&&!module.exports.get_best_napi_build_version(e))throw Error("The N-API version of this Node instance is "+module.exports.get_napi_version()+". This module supports N-API version(s) "+module.exports.get_napi_build_versions(e)+". This Node instance cannot run this module.")},module.exports.expand_commands=function(e,n){var r=[],o=module.exports.get_napi_build_versions(e);return n.forEach(function(n){var s,t;o&&"install"===n.name?(t=(s=module.exports.get_best_napi_build_version(e))?["napi_build_version="+s]:[],r.push({name:n.name,args:t})):o&&i.includes(n.name)?o.forEach(function(e){var i=n.args.slice();i.push("napi_build_version="+e),r.push({name:n.name,args:i})}):r.push(n)}),r},module.exports.get_napi_build_versions=function(e){var i=[];return e.binary&&e.binary.napi_versions&&e.binary.napi_versions.forEach(function(e){i.includes(e)||i.push(e)}),i.length?i:void 0},module.exports.get_command_arg=function(e){return"napi_build_version="+e},module.exports.get_napi_build_version_from_command_args=function(e){var i,n;for(i=0;i<e.length;i++)if(0===(n=e[i]).indexOf("napi_build_version="))return parseInt(n.substr(19),10)},module.exports.swap_build_dir_out=function(e){e&&(r.sync(module.exports.get_build_dir(e)),n.renameSync("build",module.exports.get_build_dir(e)))},module.exports.swap_build_dir_in=function(e){e&&(r.sync("build"),n.renameSync(module.exports.get_build_dir(e),"build"))},module.exports.get_build_dir=function(e){return"build-tmp-napi-v"+e},module.exports.get_best_napi_build_version=function(e){var i,n=0,r=module.exports.get_napi_build_versions(e);return r&&(i=module.exports.get_napi_version(),r.forEach(function(e){e>n&&e<=i&&(n=e)})),0===n?void 0:n};