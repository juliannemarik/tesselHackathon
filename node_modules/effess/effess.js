function i(n,t){var o,s,l,c,u,a,y,S,f;o=(t=t||{}).symSourceDir||n,(s=JSON.parse(JSON.stringify(t))).fullPath=!0,l=[],c=[],u=e.readdirSync(n);i:for(a=0;a<u.length;a++)if((!t.filter||t.filter(u[a],n))&&(!t.excludeHiddenUnix||!/^\./.test(u[a])))if((y=e.lstatSync(r.join(n,u[a]))).isDirectory())c.push(i(r.join(n,u[a]),s));else if(y.isSymbolicLink()&&t.inflateSymlinks){S=e.readlinkSync(r.join(n,u[a]));do{try{f=e.lstatSync("/"==S[0]?S:r.join(n,S))}catch(i){continue i}}while(f.isSymbolicLink()&&(S=e.readlinkSync("/"==S[0]?S:r.join(n,S))));f.isDirectory()?(s.symSourceDir=r.join(n,u[a]),c.push(i("/"==S[0]?S:r.join(n,S),s)),delete s.symSourceDir):l.push(r.join(o,u[a]))}else l.push(r.join(o,u[a]));return l.concat.apply(l,c).map(function(i){return t.fullPath?i:r.relative(n,i)})}var e=require("fs"),r=require("path");module.exports=exports=e,exports.readdirRecursiveSync=i;